print(freq_table)
hist <- hist(covariate, breaks=8, col="#CCCCFF", freq=FALSE)
export <- str_interp("${factor}_hist.jpg")
if(!file.exists(export)) {
jpeg(export)
hist
dev.off()
}
return(hist)
}
factor_hist("nbrtotc", "Number of Claims")
factor_hist("nbrtotan", "Number of Claims")
# Percentage of total claims
factor_hist <- function(factor, xlabel) {
covariate <- data[[factor]]
freq_table <- table(covariate)/length(covariate) * 100
print(freq_table)
hist <- hist(covariate, breaks=8, col="#CCCCFF", freq=FALSE, main ="")
export <- str_interp("${factor}_hist.jpg")
if(!file.exists(export)) {
jpeg(export)
hist
dev.off()
}
return(hist)
}
factor_hist("nbrtotan", "Number of Claims")
factor_hist("nbrtotc", "Number of Claims")
# Percentage of total claims
factor_hist <- function(factor, xlabel) {
covariate <- data[[factor]]
freq_table <- table(covariate)/length(covariate) * 100
print(freq_table)
hist <- hist(covariate, breaks=12, col="#CCCCFF", freq=FALSE, main ="")
export <- str_interp("${factor}_hist.jpg")
if(!file.exists(export)) {
jpeg(export)
hist
dev.off()
}
return(hist)
}
factor_hist("nbrtotc", "Number of Claims")
# Percentage of total claims
factor_hist <- function(factor, xlabel) {
covariate <- data[[factor]]
freq_table <- table(covariate)/length(covariate) * 100
print(freq_table)
hist <- hist(covariate, col="#CCCCFF", freq=FALSE, main ="")
export <- str_interp("${factor}_hist.jpg")
if(!file.exists(export)) {
jpeg(export)
hist
dev.off()
}
return(hist)
}
factor_hist("nbrtotc", "Number of Claims")
# Percentage of total claims
factor_hist <- function(factor, xlabel) {
covariate <- data[[factor]]
freq_table <- table(covariate)/length(covariate) * 100
print(freq_table)
hist <- histogram(covariate, type="percent", xlab= xlabel)
export <- str_interp("${factor}_hist.jpg")
if(!file.exists(export)) {
jpeg(export)
hist
dev.off()
}
return(hist)
}
factor_hist("nbrtotc", "Number of Claims")
list("nbrtotc" = "Number of Claims")
?list
quote(var)
?quote
?list
list[0]
list[0]
t <- list("nbrtotc" = "Number of Claims")
t[0]
t[1]
t[,1]
t[1,]
t[1][1]
t[1][0]
t[1]
name(t)
names(t)
values(t)
(t)
(t)[]
t[]
?list
?list90
?list()
values(t)
unlist(t)
?unlist
unlist(t, use.names = F)
t <- list("nbrtotc" = "Number of Claims", "AGEPH" = "Age of policy holder")
unlist(t, use.names = F)
c(unlist(t, use.names = F))
c(unlist(t, use.names = F))[2]
c(unlist(t, use.names = F))[1]
(unlist(t, use.names = F))[1]
unlist(t, use.names = F)[1]
unlist(t, use.names = F)[2]
unlist(t, use.names = F)[0]
unlist(t, use.names = F)[1]
v <- unlist(t, use.names = F)
for (i in v) { print i}
for(i in v) { print i}
for(var in v) { print(var)}
for(i in v) { print(i)}
names(list)
names(v)
names(t)
t["nbrtotc"]
t$"nbrtotc"
t["nbrtotc"]
ncol(data)
spec <- list("AGEPH" = "",
"CODPOSS" = "",
"duree" = "",
"lnexpo" = "",
"nbrtotc" = "",
"nbrtotan" = "",
"chargtot" = "",
"agecar" = "",
"sexp" = "",
"fuelc" = "",
"split" = "",
"usec" = "",
"fleetc" = "",
"sportc" = "",
"coverp" = "",
"powerc" =)
spec <- list("AGEPH" = "",
"CODPOSS" = "",
"duree" = "",
"lnexpo" = "",
"nbrtotc" = "",
"nbrtotan" = "",
"chargtot" = "",
"agecar" = "",
"sexp" = "",
"fuelc" = "",
"split" = "",
"usec" = "",
"fleetc" = "",
"sportc" = "",
"coverp" = "",
"powerc" = "")
data$agecar
source('~/Documents/KUL/data_science/assignment/exploratory.r', encoding = 'UTF-8', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/exploratory.r', encoding = 'UTF-8', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/exploratory.r', encoding = 'UTF-8', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/exploratory.r', encoding = 'UTF-8', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/exploratory.r', encoding = 'UTF-8', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/exploratory.r', encoding = 'UTF-8', echo=TRUE)
eval(density)
source('~/Documents/KUL/data_science/assignment/exploratory.r', encoding = 'UTF-8', echo=TRUE)
?dev.print
source('~/Documents/KUL/data_science/assignment/exploratory.r', encoding = 'UTF-8', echo=TRUE)
var_hist("nbrtotc", "Number of Claims")
source('~/Documents/KUL/data_science/assignment/exploratory.r', encoding = 'UTF-8', echo=TRUE)
var_hist("nbrtotc", "Number of Claims")
View(data)
1/0.04
1/0.0465
1/0.04657534
spec[2:3]
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
View(data)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
View(data)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
View(data)
View(data)
names(struct)[8:struct.length]
names(struct)[8:struct.count]
names(struct)[8:length(struct)]
struct[names(struct)[8:length(struct)]]
new <- struct[names(struct)[8:length(struct)]]
new
t <- struct[8:length(struct)]
t
View(postal)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
View(data)
View(data)
#
references <- list("2-5", "Female", "Petrol", "Once", "Private", "No", "No", "MTPL")
names(references) <- names(factors)
#
references <- list("2-5", "Female", "Petrol", "Once", "Private", "No", "No", "MTPL", "66-110")
names(references) <- names(factors)
# background color
bg_color <- "#03EF62"
# Categorical variables
factors <- struct[8:length(struct)]
factors
# Categorical variables
factors <- struct[8:length(struct)]
#
references <- list("2-5", "Female", "Petrol", "Once", "Private", "No", "No", "MTPL", "66-110")
names(references) <- names(factors)
references
data["sexp"]
references["sexp"]
v  = references["sexp"]
v
v  = references[["sexp"]]
v
?histogram()
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
set_defaults(references)
set_defaults <- function(references) {
for(n in names(references)) {
df[[n]] = as.factor(df[n])
df[[n]] = relevel(df[n], ref = references[[n]])
}
}
set_defaults(references)
set_defaults <- function(references) {
for(n in names(references)) {
df[[n]] = as.factor(df[[n]])
df[[n]] = relevel(df[[n]], ref = references[[n]])
}
}
set_defaults(references)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
?table
?table()
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
# Continuous variables
continuous <- struct[2:7]
continuous
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
continuous
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
render("Assignment.rmd")
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
for(f in names(factors)) {
plot_bar(f, factors[f])
freq_table(f)
}
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
unquote("string")
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
unquote("string")
unquote("string")
as.name("string")
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
struct <- list(CODPOSS = "postal code in Belgium",
AGEPH = "age of the policy holder",
duree = "unit of exposure (fraction of year)",
lnexpo = "log of exposure",
nbrtotc = "number of claims during period of exposure",
nbrtotan = "claim frequency rate",
chargtot = "total claim amount",
agecar = "age of the car",
sexp = "sex of the policyholder",
fuelc = "type of fuel",
split = "split of the premium",
usec = "use of the car",
fleetc = "car belonging to a fleet",
sportc = "sports car",
coverp = "type of coverage",
powerc = "horsepower of the car")
# Categorical variables
factors <- struct[8:length(struct)]
factors
df[sexp]
df$sexp
factors$sexp
factors$sexp
factors[[sexp]]
factors[["sexp"]]
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
df[[sexp]]
df[[as.String(sexp)]]
df[[String(sexp)]]
df[[atring(sexp)]]
df[[string(sexp)]]
df[[toString(sexp)]]
df[[as_string(sexp)]]
as.string(this)
# R packages
packages <- c("tidyverse", "lattice", "mgcv", "caret", "rmarkdown", "readxl", "rlang")
# load packages in the vector `packages`
load_pac(packages)
enquote("rlang")
enquote("fg")
v <- enquote("fg")
v
v <- enquo("fg")
v <- enquo(fg)
fg <- fg
quo(fg)
v <- quo(fg)
v
s <- ensym(jj)
df[[as_string(sexp)]]
df[as_string(sexp)]
as_string(sexp)
df[[as_string(quote(sexp))]]
`%$%` <- function(df, col) {
return(df[[as_string(quote(col))]])
}
df$sexp
`%$$%` <- function(df, col) {
return(df[[as_string(quote(col))]])
}
function(x) { df$$x}(sexp)
`%$$%` <- function(df, col) {
return(df[[as_string(quote(col))]])
}
function(x) { df$$x}(sexp)
`%$%` <- function(df, col) {
return(df[[as_string(quote(col))]])
}
function(x) { df$x }(sexp)
var <- function(x) { df$x }(sexp)
var
var <- function(x) { df$x }
var(sexp)
var <- function(x) {return (df$x) }
var(sexp)
`%$$%` <- function(df, col) {
return(df[[as_string(quote(col))]])
}
df$$sexp
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
`%sub%` <- function(df, col) {
return(df[[as_string(quote(col))]])
}
dfsubsexp
`%$%` <- function(df, col) {
return(df[[as_string(quote(col))]])
}
var <- function(x) {return (df%$%x) }
var(sexp)
var(sexp)
var <- function(x) { (df%$%x) }
var(sexp)
df
df%$%x
df%$%sexp
df%$%"sexp"
`%$%` <- function(df, col) {
return(df[[as_string(quote(col))]])
}
`%$%` <- function(df, col) {
return(df[[as_string(col)]])
}
test <- function(x) { df%$%x }
test(sexp)
`%$%` <- function (df, col) {
df$rlang::qq_show(!!sym(col))
}
var <- function(x) {df %$% x}
var
`%$%` <- function (df, col) {
rlang::qq_show(df$!!sym(col))
}
var <- function(x) {df %$% x}
var
var(sexp)
`%$%` <- function (df, col) {
df$rlang::qq_show(!!sym(col))
}
var <- function(x) {df %$% x}
var(sexp)
df[[sexpp]]
df[[sexp]]
df[[duree]]
quote("sexp")
arg <- quote(sexp)
arg
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
plot_bar(factors[2:5])
plot_bar(factors[2:5])
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
plot_bar(factors[1:3])
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
#export <- str_interp("${col}_bar.png")
return(export_plot(export))
#export <- str_interp("${col}_bar.png")
#return(export_plot(export))
}
for (col in cols) {
bar <- ggplot(data = df, aes(as.factor(!!col))) +
theme_bw() + geom_bar(aes(y = (..count..)/sum(..count..)),
col = bg_color, fill = bg_color, alpha = 0.5) +
labs(x = struct[[col]], y = "Relative Frequency")
print(bar)
#export <- str_interp("${col}_bar.png")
#return(export_plot(export))
}
# Percentage of total claims
plot_bar <- function(struct) {
cols <- syms(names(struct))
for (col in cols) {
bar <- ggplot(data = df, aes(as.factor(!!col))) +
theme_bw() + geom_bar(aes(y = (..count..)/sum(..count..)),
col = bg_color, fill = bg_color, alpha = 0.5) +
labs(x = struct[[col]], y = "Relative Frequency")
print(bar)
#export <- str_interp("${col}_bar.png")
#return(export_plot(export))
}
}
plot_bar(factors[1:3])
plot_bar(factors)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
var <- "hello"
var + "world"
paste(var + "world")
paste(var ,"world")
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
?as_string
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
plot_hist(continuous[1:2])
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
continuous
length(continous)
length(continuous)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
source('~/Documents/KUL/data_science/assignment/Assignment.r', echo=TRUE)
